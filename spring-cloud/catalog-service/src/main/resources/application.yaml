spring:
  cloud:
    loadbalancer:
      retry:
        enabled: true
  application:
    name: catalog-service
    config:
      uri: http://localhost:9000
     
movie-info-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
    NFLoadBalancerPingClassName: com.netflix.niws.loadbalancer.NIWSDiscoveryPing
    ServerListRefreshInterval: 1000
    MaxAutoRetries: 5
    MaxAutoRetriesNextServer: 0
    retryableStatusCodes: 503, 502, 500, 404
    OkToRetryOnAllOperations: true
    ConnectTimeout: 3000
    ReadTimeout: 3000
    
ratings-data-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
    NFLoadBalancerPingClassName: com.netflix.niws.loadbalancer.NIWSDiscoveryPing
    ServerListRefreshInterval: 1000
    MaxAutoRetries: 5
    MaxAutoRetriesNextServer: 1
    retryableStatusCodes: 503, 502, 500, 404
    OkToRetryOnAllOperations: true
    ConnectTimeout: 3000
    ReadTimeout: 3000

management:
  endpoints:
    web:
      exposure:
        include: "*"

feign:
  client:
    config:
      movie-info-service:
        connectTimeout: 1000
        readTimeout: 1000
        loggerLevel: FULL
        errorDecoder: learn.kd.catalog.config.feign.CustomFeignErrorDecoder
        retryer: learn.kd.catalog.config.CustomFeignRetryer
        requestInterceptors:
          - learn.kd.catalog.interceptor.RestCallInfoIntercepter
#         decode404: false
#         encoder: com.example.SimpleEncoder
#         decoder: com.example.SimpleDecoder
#         contract: com.example.SimpleContract
        
ribbon:
  eureka:
    enabled: true
  eager-load:
    enabled: true

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 30
  client:
    healthcheck:
      enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka
